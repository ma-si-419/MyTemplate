Effekseer:エフェクトのツール・ライブラリのセット
エフェクト全般のコントロールと、エフェクト作成のツールを提供

Effect

"Effekseer"で検索するか
https://effekseer.github.io/jp/
ここから、ダウンロードしてきます。
ひとまず必要なツールはダウンロードタブの先頭にあるものです。
Windows 64bitのを落としてくれば問題ありません。

ライブラリ
すぐ下にC++とありますが、これは上級者用です。
DxLib用のライブラリが下の方にありますので、これを落としてきましょう

落として来たら、ツール・ライブラリともに展開します。
ライブラリの方は、DxLibの使用ができます。

専門用語について
パーティクル:細かい粒の事をそういいます。
				エフェクトにおいては、これが大量に描画されることで
				火花や光の粒などが表現できます。
				エフェクトの代表格です。
ビルボード:常にカメラ方向を向いている2Dの板ポリゴンです。
				エフェクトにおいては、この2Dに円等の絵をかいておいて
				それが常にカメラを向くようにします。
				これを大量に描画することで小さな粒がたくさんあるように見えます。
				
				パーティクルの粒は、処理速度の関係上、基本的に
				ビルボードを用いることがほとんどですが、リッチなゲーム
				だと、3Dオブジェクトを大量に表示することもあります。
				
基本的にこの2つがエフェクトの代表格ですが、ほかにも
リボン、リング、軌跡、モデル
があります。

リボンは、TRIANGLESTRIPでひとつながりの長方形で表現したものです。
基本的には、剣のエフェクトや、竜巻などに使えます。

リングは、リボンの頭おお尻がつながってるやつです。

軌跡はリボンとほぼ同じですが、戦闘が明るく、お知りに向かって消えていく
拡大縮小に影響されない

モデルは、これはパーティクルの粒が3Dモデルになったものです。
重いので使用には注意しましょう。

こういうもので、パアーティクルエフェクトを作ります。

で、エフェクトそれぞれは、*.efkprojや*.efkefc等のファイル名ですが
これはあくまでプロジェクトファイルです。

これを実機で使う際には、「エクスポート」が必要です。
エクスポートには、標準形式とパッケージというのがあります。
どちらでも構いませんがパッケージだと画像ファイルなどが
1つのエフェクトファイルにまとめられます。

ツールの解析はこの辺で、あとは、サンプル改造するなり、
マニュアル見ながら作るなりしましょう。サンプルは、ツールをダウンロード
したときに十分な数が一緒にくっついてきてますし、それ以外なら
公式サイトの「サンプルダウンロード」から取得すればいいかなと思います。

凝ると時間が解けるので、サンプルの色や画像を改造する程度

で、ライブラリの方ですが、初期化が意外とややこしいです。

-----------------------------------------------------------

まずEffekseer_Init(パーティクル最大数)を呼び出します。
これは必ず、DxLib_Initの後に呼び出して下さい
DxLib_Init()の前だと必ず失敗します。

Effecseerを使用する前に必ず
SetChangeScreenModeGraphicsSystemResetFlag(false)

を呼び出しておきます。
(解説)スクリーンモードを切り替える際に、DxLibが内部で
デバイスを再起動します。この時にせっかっく初期化時に
行った設定まで切れてしまいます。
このため、「それはやらないで」ということをDxLibに
お願いしておく。

その代わり
Effekseer_SetGraphicsDeviceLostCallbackFunctions();
これを呼び出しておきます。Effekseer内部の藩士です。
スクリーンモード切替などで「デバイス再起動」が行われる
時に、適切にDxLib,Effekseerともに再起動を行うための関数。

①LoadEffekseerEffectでエフェクトを呼び出す。

毎フレーム
Effekseer_Sync3DSetting();
でカメラ情報をEffekseerに教える。

再生はPlayEffekseer3DEffectで行う。

この時にハンドルを受け取るので、必ず
保持しておくこと

子のハンドルを用いて、再再生(リロード)や
描画位置、描画方向の変更を行うため

一通り操作が終わったら、UpdateEffekseer3Dを
呼び出して、Effekseer内部の時間を進める。

終了時は
DeleteEffekseerEffeckで削除する

少しややこしいのが、エフェクトそのもののハンドルと再生している
エフェクトのハンドルが違うことです。

①エフェクトそのもののハンドル=ロードした情報につく
②再生中のエフェクトのハンドル=Playの時に新しく生成される

この二つを明確に区別しておく必要があります。
ややこしい場合は自分で、構造体として管理した方がいいかなと思います。

3DのTPSを作るときに、コントローラと「カメラやキャラの動き」(移動方向)に
困ってませんか?あと、カメラがどっかにめり込んだりしませんか？

DxLibの場合、移動させようと思ったら、SetPositionを使用することになると
思いますが、これって、XYZでしか管理できません。

ところがTPS(FPS)を作ろうと思うと、XYZではなく、FRONT,BACK,LEFT,RIGHT
たまにUP,DOWNがありますが、自分が向いている方向を基準として移動させたい
ですよね？

カメラの向きをどう決めていても
GetCameraFrontVector();//前
GetCameraRightVector();//右

GetCameraBackVector();//後ろ
GetCameraLeftVector();//左

これで得られたVECTORをただ、VAddしてあげた結果を
SetPositionに渡してあげれば今向いてる方向の前後左右への移動ができます。

意外とカメラ周りをコントロールするのはややこしいので、
CameraClassを作っておいた方がいいです。
TPSの場合、キャラを中心に回転した結果、カメラが壁にめり込むことがあります。
これをどうやって回避するのか、の話をしたいかなと思います。




